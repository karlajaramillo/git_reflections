- - - - - - - - - - - - - - - - - - - - - - - - - - -
- - - - - - - - - - - - - - - - - - - - - - - - - - -
Lesson 3 
- - - - - - - - - - - - - - - - - - - - - - - - - - -
- - - - - - - - - - - - - - - - - - - - - - - - - - -

>> Local:
- Working directory
- Staging area
- Commit history

Git is a part of GitHub
Clone operates with remote
When you push or pull operates on branches, taken a branch an push or pull to/from the origin or remote repository.


Steps to add a remote repository on GitHub
1- on GitHub create a new repository

2- copy the url given by Github

3- make sure there are no remote repos in your local
>>git remote     - list remote repositories

4- add the remote repository name, it is usually “origin”, and the url you picked in step 2.
>>git remote add origin url_git   

5- make sure you have created the remote repo, -v is verbose for more info
>>git remote -v 

To list all branches: 
>>git branches -a

6- send or push changes to the remote use the command git push. It takes two arguments, the remote I want to send changes to (in this case I named it “origin”), and the name of the local branch that I’d like to push 
>>git push origin master
//this means: send changes to the remote branch I created “origin” (step 4), from my local branch “master”

7- to pull the latest version of the remote repo, you’ll need to pull changes from origin to your master
>>git pull origin master
//this means: pull or obtain the remote version “origin” into my local version “master”



- - - - - - - - - - - - - - - - - - - - - - — - - — 
How to delete from git history a file deleted?
- - - - - - - - - - - - - - - - - - - - - - — - - — 
1. If you have deleted a file from your Working directory, you’ll need to  delete this from git and then amend this change to a previous commit. For example, I deleted from my Working directory this file.rtf, first, I add with -A command (all) files to the Staging Area. This add files, included the deleted ones.
- git add -A lesson_3_reflections.rtf

2. $git commit --amend 
With this command, I’ll include this add that includes the deleted file into the previous command. So, the editor is opened, just save it.
My file lesson_3_reflections.rtf no longer is included into the history.


- - - - - - - - - - - - - - - - - - - - - - — - - — 
How to stash your work from your Working directory?
- - - - - - - - - - - - - - - - - - - - - - — - - — 

You’re working on a project but don’t want to add changes to the staging area and commit your work. So, you’ll need to use the stash commit to get back to your unfinished changes at any time.
1. I want to switch branches and to do so, I need to stash the changes of my Working directory because it has unfinished work: lesson3_reflections.txt  

- $git status
!!!!message: 
	error: Your local changes to the following files would be overwritten by checkout:
	lesson_3_reflections.txt
	Please, commit your changes or stash them before you can switch branches.
	Aborting!!!!

- To push a new stash onto your stack, run $git stash
$git stash
Saved working directory and index state WIP on lesson3: 37847e4 Change to .txt format
HEAD is now at 37847e4 Change to .txt format

- Now your working directory is clean
$ git status
# On branch master
nothing to commit, working directory clean

-Now you can switch branches an do work elsewhere, your changes are stored on your stack. To see what stashes are stored $git stash list
$git stash list
stash@{0}: WIP on lesson3: 37847e4 Change to .txt format

-If you want to apply to one of the older stashes use $git stash apply stash@{0}. If there is only one stash or you don’t specify one, Git assumes the most recent one
$git stash apply
On branch lesson3
Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git checkout -- <file>..." to discard changes in working directory)

	modified:   lesson_3_reflections.txt

no changes added to commit (use "git add" and/or "git commit -a")

- The apply option only tries to apply the stashed work — you continue to have it on your stack. To remove it, you can run git stash drop with the “name” of the stash to remove

$git stash drop stash@{0}
Dropped stash@{0} (24389c8e2955777a7635987fdc5a933ed45786fc)

-Finally you’ll be able to add to the Staging area and commit changes.

———————————   Reflections   ———————————

1 - When would you want to use a remote repository rather than keeping all your work
local?

When we’re sharing our work with my coworkers or doing an online project, and also make sure there is an online backup.

2 - Why might you want to always pull changes manually rather than having Git
automatically stay up-to-date with your remote repository?

To make sure you have the latest version of the remote repository.

3 - Describe the differences between forks, clones, and branches.  When would you
use one instead of another?

    Fill in your answer here

4 - What is the benefit of having a copy of the last known state of the remote
stored locally?

    Fill in your answer here

5 - How would you collaborate without using Git or GitHub?  What would be easier,
and what would be harder?

    Fill in your answer here

6 - When would you want to make changes in a separate branch rather than directly in
master?  What benefits does each approach have?

    Fill in your answer here